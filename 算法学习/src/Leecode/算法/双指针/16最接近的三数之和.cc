#include <algorithm>
#include <iostream>
#include <stack>
#include <unordered_map>
#include <vector>

#include <limits.h>
#include <math.h>
#include <string>

using namespace std;


class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        sort(nums.begin(), nums.end());

        int closestNum = INT_MAX;
        int re = 0;
        for (int i = 0; i < nums.size(); i++)
        {

            if(i>0 && nums[i]==nums[i-1])
            {
                continue;
            }
            int k = nums.size() - 1;
            for (int j = i + 1; j < nums.size() - 1; j++)
            {
                if(j>i+1 && nums[j]==nums[j-1])
                {
                    continue;
                }

                while(j<k)
                {

                    int dis = nums[i] + nums[j] + nums[k] - target;
                    if(dis==0)
                    {
                        return nums[i] + nums[j] + nums[k];
                    }
                    int dis2 = dis * dis;
                    if (dis2 < closestNum)
                    {
                        closestNum = dis2;
                        re = nums[i] + nums[j] + nums[k];

                    }
                    if(nums[i] + nums[j] + nums[k] - target>0)
                    {
                        k--;
                    }
                    else
                    {
                        j++;
                    }
                }

                if(j==k)
                {
                    break;
                }
            }
        }
        return re;
    }
};


int main()
{
    vector<int> nums{-125,-164,496,-593,-198,-24,-666,-959,443,-378,-931,-13,931,293,-705,-971,-291,277,-159,-244,644,-360,115,-404,-49,-295,558,-53,-359,-113,888,-380,76,234,-658,-207,928,-829,-243,841,760,-754,389,705,-725,60,594,330,666,-330,-982,-85,-590,744,-458,-178,-861,-500,647,973,684,-680,287,-474,-231,-422,-573,229,-537,-942,523,-740,-200,1,-420,-534,-166,341,217,828,-605,-878,-163,483,279,947,-574,164,-338,-354,597,-678,203,-756,932,708,-480,-905,-333,-283,158,-618,145,-801,-932,-751,895,821,515,-275,-999,-529,-367,716,-199,243,476,-335,802,586,28,853,712,-288,-614,761,-910,894,720,-73,-579,-334,210,-190,-510,500,631,-694,72,-598,-591,-651,655,-355,-946,494,769,959,-32,383,637,-412,-539,249,362,664,-468,-735,908,-142,-315,717,885,-67,-743,-697,173,-779,282,-939,-647,-16,668,857,38,394,787,571,-702,-3,-988,-711,-120,990,649,-373,382,782,-294,184,453,-165,391,-7,721,584,298,463,-965,898,-519,15,-461,972,232,-776,356,641,-940,67,-290,621,969,535,-791,-160,-617,903,269,49,-318,3,-865,-827,900,-787,691,785,420,582,-962,-210,826,-10,-93,827,299,-889,-327,506,54,-713,-526,499,468,-646,-690,770,987,-401,241,936,-215,215,125,-302,901,581,-62,-170,422,-686,10,-803,326,-281,-561,-609,-800,204,-171,209,-898,398,-322,-2,201,331,-977,-222,979,-476,228,344,-564,-321,342,-562,216,-361,-191,351,458,-478,138,78,-74,143,896,755,-138,-124,-459,533,-517,-667,-919,550,-674,32,-351,-467,-262,-416,881,838,-712,73,568,-684,766,-792,-372,492,-36,-860,-326,-134,752,-741,-882,907,-976,280,-63,489,424,665,-383,303,-456,-814,-717,-179,876,233,-181,-86,-831,699,707,187,495,318,-771,-719,-486,546,-247,-806,255,-421,-745,579,170,598,-248,-943,825,355,-718,939,-906,-903,-595,-221,433,-854,88,-908,808,-29,-546,654,29,781,89,-535};
    int target = 5741;
    Solution s;
    cout << s.threeSumClosest(nums,target) << '\n';
    return 0;
}
